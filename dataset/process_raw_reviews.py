import json
import re # Th∆∞ vi·ªán cho regular expressions (x·ª≠ l√Ω text n√¢ng cao)

input_jsonl_file = 'All_Beauty.jsonl'  
output_txt_file = 'data_review.txt'    

# ƒê·ªãnh nghƒ©a c√°ch map t·ª´ "rating" (1-5 sao) sang "nh√£n c·∫£m x√∫c"
def map_rating_to_emotion(rating_float):
    rating = float(rating_float) # ƒê·∫£m b·∫£o rating l√† s·ªë th·ª±c

    if rating > 4.5:      # Th∆∞·ªùng l√† 5 sao (v√≠ d·ª•: 4.6 - 5.0)
        return 'love'     # "H∆°n c·∫£ joy" -> y√™u th√≠ch, r·∫•t h√†i l√≤ng
    elif rating > 3.5:    # Th∆∞·ªùng l√† 4 sao (v√≠ d·ª•: 3.6 - 4.5)
        return 'joy'
    elif rating > 2.5:    # Th∆∞·ªùng l√† 3 sao (v√≠ d·ª•: 2.6 - 3.5)
        return 'surprise' 
    elif rating > 1.5:    # Th∆∞·ªùng l√† 2 sao (v√≠ d·ª•: 1.6 - 2.5)
        return 'sadness'
    elif rating >= 0:     # D∆∞·ªõi 1.5 (Th∆∞·ªùng l√† 1 sao, ho·∫∑c 0 n·∫øu c√≥)
        return 'anger'
    return None

# --- K·∫æT TH√öC PH·∫¶N C·∫§U H√åNH ---

def process_raw_review_data():
    try:
        with open(input_jsonl_file, 'r', encoding='utf-8') as infile, \
             open(output_txt_file, 'w', encoding='utf-8') as outfile:

            print(f"üöÄ B·∫Øt ƒë·∫ßu x·ª≠ l√Ω file: {input_jsonl_file}")
            line_count = 0
            processed_count = 0
            skipped_no_label_count = 0
            skipped_missing_data_count = 0
            skipped_empty_text_count = 0
            json_error_count = 0

            for line in infile:
                line_count += 1
                if line_count % 10000 == 0: 
                    print(f"ƒê√£ ƒë·ªçc {line_count} d√≤ng...")
                try:
                    data_item = json.loads(line.strip())

                    rating_str = data_item.get('rating') 
                    title = data_item.get('title', '') 
                    text_content = data_item.get('text', '')

                    if rating_str is None or not text_content:
                        skipped_missing_data_count +=1
                        continue
                    
                    try:
                        rating = float(rating_str)
                    except ValueError:
                        skipped_missing_data_count += 1
                        continue

                    emotion_label = map_rating_to_emotion(rating)

                    if emotion_label:
                        combined_text = title
                        if title and text_content:
                            combined_text += ". " + text_content
                        elif text_content:
                            combined_text = text_content
                        
                        cleaned_text = combined_text.replace('\n', ' ').replace('\r', ' ')
                        cleaned_text = re.sub(r'\[\[VIDEOID:[a-zA-Z0-9_.-]+\]\]', '', cleaned_text)
                        cleaned_text = re.sub(r'<br\s*/?>', ' ', cleaned_text)
                        cleaned_text = re.sub(r'<[^>]+>', '', cleaned_text)
                        cleaned_text = cleaned_text.replace(';', ',')
                        cleaned_text = cleaned_text.strip()
                        cleaned_text = re.sub(r'\s+', ' ', cleaned_text)

                        if cleaned_text:
                            outfile.write(f"{cleaned_text};{emotion_label}\n")
                            processed_count += 1
                        else:
                            skipped_empty_text_count +=1
                    else:
                        skipped_no_label_count +=1

                except json.JSONDecodeError:
                    json_error_count +=1
                except Exception:
                    json_error_count +=1
            
            print(f"\n--- HO√ÄN T·∫§T X·ª¨ L√ù ---")
            print(f"T·ªïng s·ªë d√≤ng ƒë√£ ƒë·ªçc t·ª´ file input: {line_count}")
            print(f"S·ªë d√≤ng ƒë√£ x·ª≠ l√Ω th√†nh c√¥ng v√† ghi ra file output: {processed_count}")
            print(f"S·ªë d√≤ng b·ªã b·ªè qua do thi·∫øu rating/text ho·∫∑c rating kh√¥ng h·ª£p l·ªá: {skipped_missing_data_count}")
            print(f"S·ªë d√≤ng b·ªã b·ªè qua do rating kh√¥ng map ra nh√£n: {skipped_no_label_count}")
            print(f"S·ªë d√≤ng b·ªã b·ªè qua do text r·ªóng sau khi l√†m s·∫°ch: {skipped_empty_text_count}")
            print(f"S·ªë d√≤ng b·ªã l·ªói JSON ho·∫∑c l·ªói kh√°c: {json_error_count}")
            print(f"üéâ File output ƒë√£ ƒë∆∞·ª£c l∆∞u t·∫°i: {output_txt_file}")

    except FileNotFoundError:
        print(f" L·ªñI: Kh√¥ng t√¨m th·∫•y file input '{input_jsonl_file}'.")
    except Exception as e:
        print(f" L·ªñI T·ªîNG QU√ÅT KH√îNG X√ÅC ƒê·ªäNH: {e}")

if __name__ == '__main__':
    process_raw_review_data()